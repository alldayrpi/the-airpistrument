from time import sleep
from timeit import default_timer as timer
import pygame
import Adafruit_ADS1x15

adc = Adafruit_ADS1x15.ADS1115(address=0x48, busnum=1)

GAIN=1

pygame.mixer.pre_init(44100, -16, 12, 512)
pygame.init()

ton1 = pygame.mixer.Sound('Piano/c.wav')
ton1.set_volume(1.00);
ton2 = pygame.mixer.Sound('Piano/d.wav')
ton2.set_volume(1.00);
ton3 = pygame.mixer.Sound('Piano/e.wav')
ton3.set_volume(1.00);
ton4 = pygame.mixer.Sound('Piano/f.wav')
ton5 = pygame.mixer.Sound('Piano/g.wav')
ton5.set_volume(1.00);
ton6 = pygame.mixer.Sound('Piano/a.wav')
ton6.set_volume(1.00);
ton7 = pygame.mixer.Sound('Piano/b.wav')
ton7.set_volume(1.00);
ton8 = pygame.mixer.Sound('Piano/c2.wav')
ton8.set_volume(1.00);
ton9 =  pygame.mixer.Sound('Piano/beep.wav')
ton9.set_volume(1.00);
dton1 =  pygame.mixer.Sound('Piano/open.wav')
dton1.set_volume(.65);
dton2 =  pygame.mixer.Sound('Piano/kick.wav')
dton2.set_volume(.65);
dton3 =  pygame.mixer.Sound('Piano/cymbal.wav')
dton3.set_volume(.65);
dton4 =  pygame.mixer.Sound('Piano/snare.wav')
dton4.set_volume(.65);
dton5 =  pygame.mixer.Sound('Piano/closed.wav')
while 1:
 while 1:
    value = [0]
    value[0] = adc.read_adc(0, gain=GAIN)
    val=value[0]/32767.0 * 6.144
    if val < 4.7 and val > 3.7:
     ton1.play()
    if val < 3.7 and val > 3.0:
     ton2.play()
    if val < 3.0 and val > 2.6:
     ton3.play()
    if val < 2.6 and val > 2.15:
     ton4.play()
    if val < 2.15 and val > 2.00:
     ton5.play()
    if val < 2.00 and val > 1.77:
     ton6.play()
    if val < 1.77 and val > 1.45:
     ton7.play()
    if val < 1.45 and val > 1.36:
     ton8.play()
    if val < 1.2 and val > 0.99 :
     ton9.play()
     sleep(2)
     break;
    sleep(0.1)
 while 1:

    value = [0]
    value[0] = adc.read_adc(0, gain=GAIN)
    val=value[0]/32767.0 * 6.144
    if val < 4.7 and val > 3.7:
     dton1.play()
    if val < 3.7 and val > 3.0:
     dton2.play()
    if val < 3.0 and val > 2.6:
     dton3.play()
    if val < 2.6 and val > 2.15:
     dton4.play()
    if val < 2.15 and val > 2.00:
     dton5.play()
    if val < 1.2 and val > 0.99 :
     ton9.play()
     sleep(2)
     break;
    sleep(0.1)
